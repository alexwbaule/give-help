---
swagger: "2.0"
info:
  title: give help
  version: 1.0.0
schemes:
  - https
basePath: /v1
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  APIKeyHeader:
    type: oauth2
    authorizationUrl: https://give-help
    tokenUrl: https://give-help
    flow: accessCode
    scopes:
      admin: "Admin scope"
      user: "Normal User scope"

tags:
  - name: user
  - name: transaction
  - name: proposal
  - name: tags
  - name: terms

security:
  - APIKeyHeader:
      - user

paths:
  /user:
    post:
      tags:
        - user
      summary: Add User
      description: Add a new User
      operationId: AddUser
      parameters:
        - in: body
          name: body
          description: User Object to be added
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        200:
          description: User ID
          schema:
            $ref: "#/definitions/User"
        401:
          description: Authorization Error
          schema:
            $ref: "#/definitions/ApiError"
            500:
              description: Internal Error
              schema:
                $ref: "#/definitions/ApiError"
    get:
      tags:
        - user
      summary: Get User
      description: Get User by ID
      operationId: GetUserByID
      responses:
        200:
          description: User
          schema:
            $ref: "#/definitions/User"
        401:
          description: Authorization Error
          schema:
            $ref: "#/definitions/ApiError"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/ApiError"
    put:
      tags:
        - user
      summary: Update User
      description: Update User By ID
      operationId: UpdateUserByID
      parameters:
        - in: body
          name: body
          description: User Object to be added
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        200:
          description: User Updated
        401:
          description: Authorization Error
          schema:
            $ref: "#/definitions/ApiError"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/ApiError"

  /transaction:
    post:
      tags:
        - transaction
      summary: Add a Transaction
      description: Add a New Transaction
      operationId: AddTransaction
      parameters:
        - in: body
          name: body
          description: Transaction Object to be added
          required: true
          schema:
            $ref: "#/definitions/Transaction"
      responses:
        200:
          description: Transaction ID
          schema:
            $ref: "#/definitions/ID"
        401:
          description: Authorization Error
          schema:
            $ref: "#/definitions/ApiError"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/ApiError"

  /transaction/{transaction_id}:
    get:
      tags:
        - transaction
      summary: Get Transaction
      description: Get Transaction By ID
      operationId: GetTransactionByID
      parameters:
        - $ref: "#/parameters/TransactionID"
      responses:
        200:
          description: Transaction
          schema:
            $ref: "#/definitions/Transaction"
        401:
          description: Authorization Error
          schema:
            $ref: "#/definitions/ApiError"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/ApiError"

  /transaction/proposal/{proposal_id}:
    get:
      tags:
        - transaction
      summary: Get Transaction By Proposal
      description: Get Transaction By Proposal ID
      operationId: GetTransactionByProposalID
      parameters:
        - $ref: "#/parameters/ProposalID"
      responses:
        200:
          description: Transaction List
          schema:
            type: array
            items:
              $ref: "#/definitions/Transaction"
        401:
          description: Authorization Error
          schema:
            $ref: "#/definitions/ApiError"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/ApiError"

  /transaction/user:
    get:
      tags:
        - transaction
      summary: Get Transaction By User
      description: Get Transaction By User ID
      operationId: GetTransactionByUserID
      parameters:
        - $ref: "#/parameters/ProposalID"
      responses:
        200:
          description: Transaction List
          schema:
            type: array
            items:
              $ref: "#/definitions/Transaction"
        401:
          description: Authorization Error
          schema:
            $ref: "#/definitions/ApiError"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/ApiError"

  /transaction/{transaction_id}/giver_review:
    put:
      tags:
        - transaction
      summary: Update Transaction with Giver Review
      description: Update Transaction with Giver Review
      operationId: TransactionGiverReview
      parameters:
        - $ref: "#/parameters/TransactionID"
        - in: body
          name: body
          description: Review
          required: true
          schema:
            $ref: "#/definitions/Review"
      responses:
        200:
          description: Giver Review Created
        401:
          description: Authorization Error
          schema:
            $ref: "#/definitions/ApiError"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/ApiError"

  /transaction/{transaction_id}/taker_review:
    put:
      tags:
        - transaction
      summary: Update Transaction with Taker Review
      description: Update Transaction with Taker Review
      operationId: TransactionTakerReview
      parameters:
        - $ref: "#/parameters/TransactionID"
        - in: body
          name: body
          description: Review
          required: true
          schema:
            $ref: "#/definitions/Review"
      responses:
        200:
          description: Taker Review Created
        401:
          description: Authorization Error
          schema:
            $ref: "#/definitions/ApiError"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/ApiError"

  /transaction/{transaction_id}/change_status:
    put:
      tags:
        - transaction
      summary: Change Transaction Status
      description: Change Transaction Status
      operationId: ChangeTransactionStatus
      parameters:
        - $ref: "#/parameters/TransactionID"
        - in: body
          name: body
          description: Status
          required: true
          schema:
            $ref: "#/definitions/TransactionStatus"
      responses:
        200:
          description: Transaction Status Changed
        401:
          description: Authorization Error
          schema:
            $ref: "#/definitions/ApiError"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/ApiError"

  /transaction/{transaction_id}/accept:
    put:
      tags:
        - transaction
      summary: Accept Transaction
      description: Accept Transaction
      operationId: AcceptTransaction
      parameters:
        - $ref: "#/parameters/TransactionID"
      responses:
        200:
          description: Transaction accepted
        401:
          description: Authorization Error
          schema:
            $ref: "#/definitions/ApiError"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/ApiError"

  /transaction/{transaction_id}/finish:
    put:
      tags:
        - transaction
      summary: Finish Finish
      description: Accept Transaction
      operationId: FinishTransaction
      parameters:
        - $ref: "#/parameters/TransactionID"
      responses:
        200:
          description: Transaction finished
        401:
          description: Authorization Error
          schema:
            $ref: "#/definitions/ApiError"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/ApiError"

  /transaction/{transaction_id}/cancel/{user_id}:
    put:
      tags:
        - transaction
      summary: Cancel Finish
      description: Cancel Transaction
      operationId: CancelTransaction
      parameters:
        - $ref: "#/parameters/TransactionID"
        - $ref: "#/parameters/UserID"
      responses:
        200:
          description: Transaction finished
        401:
          description: Authorization Error
          schema:
            $ref: "#/definitions/ApiError"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/ApiError"

  /proposal:
    post:
      tags:
        - proposal
      summary: Add a Proposal
      description: Add a New Proposal
      operationId: AddProposal
      parameters:
        - in: body
          name: body
          description: Proposal Object to be added
          required: true
          schema:
            $ref: "#/definitions/Proposal"
      responses:
        200:
          description: Proposal ID
          schema:
            $ref: "#/definitions/ID"
        401:
          description: Authorization Error
          schema:
            $ref: "#/definitions/ApiError"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/ApiError"

    get:
      tags:
        - proposal
      summary: Get proposals
      description: Get Proposals
      operationId: GetProposals
      security: []
      parameters:
        - in: body
          name: body
          description: Proposal Filter
          schema:
            $ref: "#/definitions/Filter"
      responses:
        200:
          description: Proposals List
          schema:
            $ref: "#/definitions/ProposalsResponse"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/ApiError"

  /proposal/{proposal_id}:
    get:
      tags:
        - proposal
      summary: Get a Proposal
      description: Get a Proposal By ID
      operationId: GetProposalByID
      security: []
      parameters:
        - $ref: "#/parameters/ProposalID"
      responses:
        200:
          description: Proposal
          schema:
            $ref: "#/definitions/Proposal"
        401:
          description: Authorization Error
          schema:
            $ref: "#/definitions/ApiError"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/ApiError"

  /proposal/user:
    get:
      tags:
        - proposal
      summary: Get Proposal By User
      description: Get Proposal By User ID
      operationId: GetProposalByUserID
      responses:
        200:
          description: Proposal List
          schema:
            type: array
            items:
              $ref: "#/definitions/Proposal"
        401:
          description: Authorization Error
          schema:
            $ref: "#/definitions/ApiError"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/ApiError"

  /proposal/{proposal_id}/share:
    get:
      tags:
        - proposal
      summary: Get a data to share from proposal owner
      description: Get a data to share from proposal owner
      operationId: GetProposalShareDataID
      security: []
      parameters:
        - $ref: "#/parameters/ProposalID"
      responses:
        200:
          description: Proposal List
          schema:
            type: array
            items:
              $ref: "#/definitions/DataToShareResponse"

        401:
          description: Authorization Error
          schema:
            $ref: "#/definitions/ApiError"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/ApiError"

  /proposal/{proposal_id}/change_state/{proposal_state}:
    put:
      tags:
        - proposal
      summary: Change Proposal State
      description: Change Proposal State
      operationId: ChangeProposalState
      parameters:
        - $ref: "#/parameters/ProposalID"
        - $ref: "#/parameters/ProposalState"
      responses:
        200:
          description: Proposal State Changed
        401:
          description: Authorization Error
          schema:
            $ref: "#/definitions/ApiError"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/ApiError"

  /proposal/{proposal_id}/add_tags:
    put:
      tags:
        - proposal
      summary: Add Proposal Tags
      description: Add Proposal Tags
      operationId: AddProposalTags
      parameters:
        - $ref: "#/parameters/ProposalID"
        - in: body
          name: body
          description: Proposal Tags
          required: true
          schema:
            $ref: "#/definitions/Tags"
      responses:
        200:
          description: Proposal Tags Added
        401:
          description: Authorization Error
          schema:
            $ref: "#/definitions/ApiError"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/ApiError"

  /proposal/{proposal_id}/add_images:
    put:
      tags:
        - proposal
      summary: Add Proposal Images
      description: Add Proposal Images
      operationId: AddProposalImages
      parameters:
        - $ref: "#/parameters/ProposalID"
        - in: body
          name: body
          description: Proposal Images
          required: true
          schema:
            $ref: "#/definitions/Tags"
      responses:
        200:
          description: Proposal Images Added
        401:
          description: Authorization Error
          schema:
            $ref: "#/definitions/ApiError"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/ApiError"

  /proposal/{proposal_id}/change_images:
    put:
      tags:
        - proposal
      summary: Change Proposal Images
      description: Change Proposal Images
      operationId: ChangeProposalImages
      parameters:
        - $ref: "#/parameters/ProposalID"
        - in: body
          name: body
          description: Proposal Images
          required: true
          schema:
            $ref: "#/definitions/Tags"
      responses:
        200:
          description: Proposal Images Changed
        401:
          description: Authorization Error
          schema:
            $ref: "#/definitions/ApiError"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/ApiError"

  /proposal/{proposal_id}/change_validate:
    put:
      tags:
        - proposal
      summary: Change Proposal Validate
      description: Change Proposal Validate
      operationId: ChangeProposalValidate
      parameters:
        - $ref: "#/parameters/ProposalID"
        - in: body
          name: body
          description: Proposal Object to be added
          required: true
          schema:
            $ref: "#/definitions/ChangeProposalDate"
      responses:
        200:
          description: Proposal Validate Added
        401:
          description: Authorization Error
          schema:
            $ref: "#/definitions/ApiError"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/ApiError"

  /proposal/{proposal_id}/change_text:
    put:
      tags:
        - proposal
      summary: Change Proposal Text
      description: Change Proposal Text
      operationId: ChangeProposalText
      parameters:
        - $ref: "#/parameters/ProposalID"
        - in: body
          name: body
          description: Proposal Object to be added
          required: true
          schema:
            $ref: "#/definitions/ChangeProposalText"
      responses:
        200:
          description: Proposal Text Added
        401:
          description: Authorization Error
          schema:
            $ref: "#/definitions/ApiError"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/ApiError"

  /tags:
    get:
      tags:
        - tags
      summary: Get Tags
      description: Get Tags
      operationId: GetTags
      security: []
      responses:
        200:
          description: Get Tags
          schema:
            $ref: "#/definitions/Tags"
        401:
          description: Authorization Error
          schema:
            $ref: "#/definitions/ApiError"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/ApiError"

  /terms:
    get:
      tags:
        - terms
      summary: Get Terms
      description: Get Terms
      operationId: GetTerms
      responses:
        200:
          description: Get Terms
          schema:
            type: array
            items:
              $ref: "#/definitions/Term"
        401:
          description: Authorization Error
          schema:
            $ref: "#/definitions/ApiError"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/ApiError"

  /terms/user:
    get:
      tags:
        - terms
      summary: Get User Accepted
      description: Get Accepted
      operationId: GetUserAccepted
      responses:
        200:
          description: Get Terms
          schema:
            type: array
            items:
              $ref: "#/definitions/UserTerm"
        401:
          description: Authorization Error
          schema:
            $ref: "#/definitions/ApiError"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/ApiError"

  /terms/{term_id}:
    put:
      tags:
        - terms
      summary: Put user accept
      description: Put user accept
      operationId: PutUserAccept
      parameters:
        - $ref: "#/parameters/TermID"
      responses:
        200:
          description: User Accepted Term
        401:
          description: Authorization Error
          schema:
            $ref: "#/definitions/ApiError"
        500:
          description: Internal Error
          schema:
            $ref: "#/definitions/ApiError"

parameters:
  ProposalState:
    name: proposal_state
    in: path
    description: "Proposal State"
    required: true
    type: boolean

  ProposalID:
    name: proposal_id
    in: path
    description: "Proposal ID"
    required: true
    type: string
    pattern: "^[0123456789ABCDEFGHJKMNPQRSTVWXYZ]{26}$"

  TransactionID:
    name: transaction_id
    in: path
    description: "Transaction ID"
    required: true
    type: string
    pattern: "^[0123456789ABCDEFGHJKMNPQRSTVWXYZ]{26}$"

  TermID:
    name: term_id
    in: path
    description: "Term ID"
    required: true
    type: string
    pattern: "^[0123456789ABCDEFGHJKMNPQRSTVWXYZ]{26}$"

  GiverID:
    name: giver_id
    in: path
    description: "Giver ID"
    required: true
    type: string
    pattern: "^[0-9a-zA-Z]{1,128}$"

  TakerID:
    name: taker_id
    in: path
    description: "Taker ID"
    required: true
    type: string
    pattern: "^[0-9a-zA-Z]{1,128}$"

  UserID:
    name: user_id
    in: path
    description: "User ID"
    required: true
    type: string
    pattern: "^[0-9a-zA-Z]{1,128}$"

definitions:
  ApiError:
    type: object
    properties:
      message:
        type: string

  LoggedUser:
    type: object
    required:
      - provider
      - email
      - name
      - picture
      - user_id
    properties:
      provider:
        type: string
      email:
        type: string
      name:
        type: string
      picture:
        type: string
      user_id:
        type: string

  ChangeProposalText:
    type: object
    required:
      - title
      - description
    properties:
      title:
        type: string
      description:
        type: string

  ChangeProposalDate:
    type: object
    required:
      - date
    properties:
      date:
        type: string
        format: date-time

  User:
    type: object
    required:
    properties:
      user_id:
        $ref: "#/definitions/UserID"
      created_at:
        type: string
        format: date-time
      last_update:
        type: string
        format: date-time
      name:
        type: string
      description:
        type: string
      device_id:
        type: string
      location:
        $ref: "#/definitions/Location"
      contact:
        $ref: "#/definitions/Contact"
      allow_share_data:
        type: boolean
      images:
        type: array
        items:
          type: string
      reputation:
        $ref: "#/definitions/Reputation"
      tags:
        $ref: "#/definitions/Tags"
      register_from:
        type: string

  Contact:
    type: object
    required:
    properties:
      phones:
        type: array
        items:
          $ref: "#/definitions/Phone"
      email:
        type: string
      instagram:
        type: string
      facebook:
        type: string
      google:
        type: string
      url:
        type: string
      additional_data:
        type: string

  Phone:
    type: object
    required:
    properties:
      region:
        type: string
      phone_number:
        type: string
      country_code:
        type: string
      whatsapp:
        type: boolean
      is_default:
        type: boolean

  Location:
    type: object
    required:
    properties:
      zip_code:
        type: integer
      address:
        type: string
      city:
        type: string
      state:
        type: string
      country:
        type: string
      lat:
        type: number
        format: float64
      long:
        type: number
        format: float64

  Reputation:
    type: object
    required:
    properties:
      giver:
        type: number
        format: float64
      taker:
        type: number
        format: float64

  Proposal:
    type: object
    required:
    properties:
      proposal_id:
        $ref: "#/definitions/ID"
      created_at:
        type: string
        format: date-time
      last_update:
        type: string
        format: date-time
      side:
        $ref: "#/definitions/Side"
      proposal_type:
        $ref: "#/definitions/Type"
      user_id:
        $ref: "#/definitions/UserID"
      tags:
        $ref: "#/definitions/Tags"
      title:
        type: string
      description:
        type: string
      proposal_validate:
        type: string
        format: date-time
      target_area:
        $ref: "#/definitions/Area"
      is_active:
        type: boolean
      images:
        type: array
        items:
          type: string
      expose_user_data:
        type: boolean
      data_to_share:
        type: array
        items:
          $ref: "#/definitions/DataToShare"
      estimated_value:
        type: number
        format: float64

  Filter:
    type: object
    required:
    properties:
      user_id:
        $ref: "#/definitions/UserID"
      tags:
        $ref: "#/definitions/Tags"
      target_area:
        $ref: "#/definitions/Area"
      side:
        $ref: "#/definitions/Side"
      proposal_types:
        type: array
        items:
          $ref: "#/definitions/Type"
        x-omitempty: true
      description:
        type: string
      max_value:
        type: number
        format: float64
      min_value:
        type: number
        format: float64
      include_expired:
        type: boolean
      include_inactive:
        type: boolean
      page_number:
        type: integer
        minimum: 0
        maximum: 500
        default: 0
        exclusiveMinimum: true
      page_size:
        type: integer
        minimum: 1
        maximum: 500
        default: 50

  ProposalsResponse:
    type: object
    required: [result, current_page, current_page_size]
    properties:
      filter:
        $ref: "#/definitions/Filter"
      result:
        type: array
        items:
          $ref: "#/definitions/Proposal"
      current_page:
        type: integer
        minimum: 0
        maximum: 500
        exclusiveMinimum: true
      current_page_size:
        type: integer
        minimum: 0
        maximum: 500

  Transaction:
    type: object
    required:
    properties:
      transaction_id:
        $ref: "#/definitions/ID"
      proposal_id:
        $ref: "#/definitions/ID"
      giver_id:
        $ref: "#/definitions/UserID"
      taker_id:
        $ref: "#/definitions/UserID"
      created_at:
        type: string
        format: date-time
      last_update:
        type: string
        format: date-time
      giver_review:
        $ref: "#/definitions/Review"
      taker_review:
        $ref: "#/definitions/Review"
      status:
        $ref: "#/definitions/TransactionStatus"

  Side:
    type: string
    enum:
      - offer
      - request
      - local-business

  Type:
    type: string
    enum:
      - job
      - service
      - product
      - finance

  Area:
    type: object
    required:
    properties:
      lat:
        type: number
        format: float64
      long:
        type: number
        format: float64
      range:
        type: number
        format: float64
      area_tags:
        $ref: "#/definitions/Tags"

  TransactionStatus:
    type: string
    enum:
      - open
      - in-progress
      - done
      - cancel

  Review:
    type: object
    required:
    properties:
      rating:
        type: integer
      comment:
        type: string

  Tags:
    type: array
    items:
      type: string
    x-omitempty: true

  DataToShare:
    type: string
    enum:
      - Phone
      - Email
      - Facebook
      - Instagram
      - URL

  DataToShareResponse:
    type: object
    required: [contact_type, value]
    properties:
      contact_type:
        $ref: "#/definitions/DataToShare"
      contact:
        type: object

  Term:
    type: object
    required:
    properties:
      term_id:
        $ref: "#/definitions/ID"
      created_at:
        type: string
        format: date-time
      last_update:
        type: string
        format: date-time
      title:
        type: string
      description:
        type: string
      is_active:
        type: boolean

  UserTerm:
    type: object
    required:
    properties:
      term:
        $ref: "#/definitions/Term"
      accepted_at:
        type: string
        format: date-time
      is_accepted:
        type: boolean

  UserID:
    type: string
    pattern: "^[0-9a-zA-Z]{1,128}$"

  ID:
    type: string
    pattern: "^[0123456789ABCDEFGHJKMNPQRSTVWXYZ]{26}$"
